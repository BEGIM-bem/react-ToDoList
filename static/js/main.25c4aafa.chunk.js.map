{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","boxShadow","input","marginRight","className","join","type","checked","id","title","onClick","TodoList","props","listStyle","margin","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25c4aafa.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Context from \"../context\";\r\n\r\n\r\nconst TodoItem = ({todo, index, onChange}) =>{\r\nconst {removeTodo} = useContext(Context);\r\n\r\nconst classes  = []\r\nif(todo.completed){\r\n    classes.push('done')\r\n}\r\n    const style ={\r\n        li: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            padding: '.5rem 1rem',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '4px',\r\n            marginBottom: '.5rem',\r\n            boxShadow: \"0 0 18px rgba(0,0,0,0.9)\"\r\n         \r\n            \r\n        },\r\n        input:{\r\n            marginRight: '1rem',\r\n            boxShadow: \"0 0 18px rgba(0,0,0,0.9)\"\r\n        }\r\n\r\n    }\r\n    return(\r\n    <li style ={style.li} >\r\n        <span className ={classes.join(' ')}>\r\n            <input type ='checkbox' style={style.input} checked = {todo.completed}  onChange= { ()=> onChange(todo.id)} />\r\n            <strong>{index +1}</strong>\r\n            &nbsp;\r\n            {todo.title}\r\n\r\n         </span>\r\n\r\n         <button className ='rm' onClick = {(() => removeTodo(todo.id))} >&times;</button>\r\n        \r\n      </li>\r\n    )\r\n\r\n}\r\nTodoItem.propTypes ={\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\nexport default TodoItem\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = (props) =>{\r\n    const style ={\r\n        ul: {\r\n            listStyle: 'none',\r\n            margin:0,\r\n            padding: 0\r\n        }\r\n    }\r\n   \r\n    \r\n    return(\r\n    \r\n            <ul style ={style.ul}>\r\n             {props.todos.map((todo, index ) => {\r\n                 return <TodoItem todo = {todo} key ={todo.id}  index ={index}  onChange ={props.onToggle} />\r\n             })}\r\n\r\n                \r\n            </ul>\r\n      \r\n    )\r\n}\r\nTodoList.propTypes ={\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\nexport default () => <div style={{display:'flex', justifyContent: 'center', margin: '.5rem'}} ><div className=\"lds-dual-ring\"></div></div>","import React from 'react'\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button className='modalBtn'  onClick={() => this.setState({ isOpen: true })}>\r\n          Open modal\r\n        </button>\r\n\r\n        {this.state.isOpen && (\r\n          <div className='modal'>\r\n            <div className='modal-body'>\r\n              <h1>Modal title</h1>\r\n              <p>I am awesome modal!</p>\r\n              <button className='modalBtn2' onClick={() => this.setState({ isOpen: false })}>\r\n                Close modal\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React,{  useState, useEffect } from 'react'\n\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\n// import AddTodo from './Todo/AddTodo';\nimport Loader from './Todo/Loader';\nimport Modal from './Modal/Modal';\n\nconst AddTodo = React.lazy(() => new Promise(resolve => {\n  setTimeout(() =>{\n    resolve(import('./Todo/AddTodo'))\n  }, 3000)\n}) )\n\nfunction App() {\n  let[todos, setTodos] =React.useState([\n  \n  ])\n\n  const[loading, setLoading] =React.useState(true)\n\nuseEffect(() => {\n  fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n  .then(response => response.json())\n  .then(todos =>{\n    setTimeout(() =>{\n      setTodos(todos)\n      setLoading(false)\n    }, 2000)\n    \n  } )\n\n}, [])\n\n\n  function toggleTodo(id){\n    setTodos( todos.map(todo =>{\n      if(todo.id === id){\n        todo.completed = !todo.completed\n      }\n\n      return todo\n    })\n    )\n  }\n  function removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id))\n\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false\n        }\n      ])\n    )\n  }\n\n  return (\n    <Context.Provider value ={{removeTodo}}>\n    <div className='wrapper'>\n  <h1>React tutorial </h1>\n  <Modal />\n\n<React.Suspense fallback ={<p>Loading....</p>} >\n<AddTodo onCreate={addTodo} />\n  </React.Suspense>\n\n{loading && <Loader />}\n\n      {todos.length? (\n      <TodoList todos ={todos} onToggle ={toggleTodo}\n       />) :( \n       \n       loading? null: <p>No todos!</p> \n       \n       )\n\n       \n       }\n    \n\n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}